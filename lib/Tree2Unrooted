
#
#	Convert a Tree structure to unrooted (as used internally
#		in PhylogeneticTree)
#	Returns a matrix of (n-2) x 3 of integers.
#	A negative integer is a reference to an external node.
#	A positive integer is a reference to an internal node.
#
#	If the Tree nodes have 4 or more fields, then the 4th is
#	assigned the internal node number.  (Notice that the root
#	does not correspond to an internal node, and hence is not
#	assigned.)
#
#					Gaston H. Gonnet (Sep 28, 2004)
Tree2Unrooted := proc( t:Tree )

treesize := proc(t:Tree)
if type(t,Leaf) then 1 else procname(t[1])+procname(t[3]) fi end:

n := treesize(t);
if n<3 then error(t,'too small to represent as unrooted') fi;

IntNodes := [];
Tree2UnrootedR := proc( t:Tree ) external IntNodes;
if type(t,Leaf) then
     if length(t) >= 3 and type(t[3],posint) and t[3] <= n then -t[3]
     else error(t,'third position of Leaf does not contain index') fi;
else i1 := procname(t[1]);
     i2 := procname(t[3]);
     IntNodes := append(IntNodes,[i1,i2,0]);
     r := length(IntNodes);
     if i1>0 then IntNodes[i1,3] := r fi;
     if i2>0 then IntNodes[i2,3] := r fi;
     if length(t) >= 4 then t[4] := r fi;
     r
     fi
end:

n1 := Tree2UnrootedR(t[1]);
n2 := Tree2UnrootedR(t[3]);
if n1>0 then IntNodes[n1,3] := n2 fi;
if n2>0 then IntNodes[n2,3] := n1 fi;
IntNodes;
end:
