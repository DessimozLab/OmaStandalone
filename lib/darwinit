# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 2.0
#
# The contents of this file are subject to the Mozilla Public License Version
# 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/2.0/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is OMA standalone.
#
# The Initial Developer of the Original Code is CBRG Research Group; 
# ETH Zurich; Switzerland.
# Portions created by the Initial Developer are Copyright (C) 2005-2013
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Christophe Dessimoz <cdessimoz@inf.ethz.ch>
#   Adrian Altenhoff <adrian.altenhoff@inf.ethz.ch>
#   Stefan Zoller <stefan.zoller@inf.ethz.ch>
#   Adrian Schneider <adrian.schneider@inf.ethz.ch>
#   Alexander Roth <alexander.roth@inf.ethz.ch>
#   Gaston Gonnet <gonnet@inf.ethz.ch>
#
# ***** END LICENSE BLOCK *****
if assigned(libdir) then
    OrthologsLib := libdir:
else
    OrthologsLib := TimedCallSystem('pwd')[2,1..-2].'/lib/':
fi:

# everything containing 'utildir' will not be part of distributed tarball
utildir := OrthologsLib.'/../utils/';
MergeOMAGroups := noeval(ReadLibrary(utildir.'MergeOMAGroups',MergeOMAGroups)):

OrthologousMatrix := noeval(ReadLibrary( OrthologsLib.'OrthologousMatrix',
	OrthologousMatrix)):
GenomeSummary := noeval(ReadLibrary( OrthologsLib.'GenomeSummary',
	GenomeSummary)):

RefinedMatches := noeval(ReadLibrary( OrthologsLib.'RefinedMatches.drw',
        RefinedMatches)):
AssertDatabaseVersionsInSync := noeval(ReadLibrary(OrthologsLib.'RefinedMatches.drw', 
    AssertDatabaseVersionsInSync)):
ReadProgram( OrthologsLib.'Pair');

WriteEspritResults := noeval(ReadLibrary( OrthologsLib.'Esprit.drw',
    WriteEspritResults));
Esprit := noeval(ReadLibrary( OrthologsLib.'Esprit.drw', Esprit));
ObjScaffold := noeval(ReadLibrary( OrthologsLib.'ScaffoldVerification.drw', ObjScaffold));

IdentifyPosition := noeval(ReadLibrary (OrthologsLib.'IdentifyPosition.drw',
    IdentifyPosition));
DistBounds := noeval(ReadLibrary(OrthologsLib.'IdentifyPosition.drw',
    DistBounds));

FileExists := noeval(ReadLibrary(OrthologsLib.'FileExists',FileExists));
StoreOrthologMilestone := noeval(ReadLibrary(OrthologsLib.'WriteMileStones',
    StoreOrthologMilestone));
LoadOrthologMilestone := noeval(ReadLibrary(OrthologsLib.'WriteMileStones',
    LoadOrthologMilestone));

WriteMatches := noeval(ReadLibrary(OrthologsLib.'WriteMatches', WriteMatches));
WriteOrthoXML := noeval(ReadLibrary(OrthologsLib.'WriteOrthoXML', WriteOrthoXML));
WriteMatrix := noeval(ReadLibrary(OrthologsLib.'WriteMatrix',WriteMatrix));
WriteGroups := noeval(ReadLibrary(OrthologsLib.'WriteMatrix',WriteGroups));
WriteFastaGroups := noeval(ReadLibrary(OrthologsLib.'WriteFastaGroups', WriteFastaGroups));
HierarchicalGroups := noeval(ReadLibrary(OrthologsLib.'HierarchicalGroups', HierarchicalGroups));
BuildSpeciesTree := noeval(ReadLibrary(OrthologsLib.'TreeBuilding', BuildSpeciesTree));

GenerateStableIDs := noeval(ReadLibrary(OrthologsLib.'StableIdentifiers', GenerateStableIDs)):
ParallelInfo := noeval(ReadLibrary(OrthologsLib.'Platforms', ParallelInfo));
DetectParallelInfo := noeval(ReadLibrary(OrthologsLib.'Platforms', DetectParallelInfo));
