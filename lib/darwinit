if assigned(libdir) then
    OrthologsLib := libdir:
else
    OrthologsLib := TimedCallSystem('pwd')[2,1..-2].'/lib/':
fi:

# everything containing 'utildir' will not be part of distributed tarball
utildir := libdir.'/../utils/';
MergeOMAGroups := noeval(ReadLibrary(utildir.'MergeOMAGroups',MergeOMAGroups)):

OrthologousMatrix := noeval(ReadLibrary( OrthologsLib.'OrthologousMatrix',
	OrthologousMatrix)):
GenomeSummary := noeval(ReadLibrary( OrthologsLib.'GenomeSummary',
	GenomeSummary)):

RefinedMatches := noeval(ReadLibrary( OrthologsLib.'RefinedMatches.drw',
        RefinedMatches)):
ReadProgram( OrthologsLib.'Pair');

WriteEspritResults := noeval(ReadLibrary( OrthologsLib.'Esprit.drw',
    WriteEspritResults));
Esprit := noeval(ReadLibrary( OrthologsLib.'Esprit.drw', Esprit));
ObjScaffold := noeval(ReadLibrary( OrthologsLib.'ScaffoldVerification.drw', ObjScaffold));

IdentifyPosition := noeval(ReadLibrary (OrthologsLib.'IdentifyPosition.drw',
IdentifyPosition));
DistBounds := noeval(ReadLibrary(OrthologsLib.'IdentifyPosition.drw',
DistBounds));


WriteMatches := noeval(ReadLibrary(OrthologsLib.'WriteMatches', WriteMatches));
WriteOrthoXML := noeval(ReadLibrary(OrthologsLib.'WriteOrthoXML', WriteOrthoXML));
WriteMatrix := noeval(ReadLibrary(OrthologsLib.'WriteMatrix',WriteMatrix));
WriteGroups := noeval(ReadLibrary(OrthologsLib.'WriteMatrix',WriteGroups));
HierarchicalGroups := noeval(ReadLibrary(OrthologsLib.'HierarchicalGroups', HierarchicalGroups));
BuildSpeciesTree := noeval(ReadLibrary(OrthologsLib.'TreeBuilding', BuildSpeciesTree));
